#-*- coding:utf-8 -*-

'''
Find longest sequence of zeros in binary representation of an integer.
1과 1로 둘러쌓인 0의 가장 긴 갯수를 나오게 하는것  

input: 101 (1100101(2))
output: 2

'''

def int2bin(i):  # 10진수 2진수로 변환 하는 함수
    binary = ""
    if i < 0:
        return -1
    if i == 0:
        return 0

    while(i):
        binary = str(i%2) + binary
        i = i/2
    
    return binary
    
    
def solution(N):
    binary = int2bin(N) # type(binary) == String  
    print binary
    gap_length = 0  #  1과 1 사이의 0의 길이 값을 저장하는 변수
    max_length = 0 # 여러 gap_length 들 중 가장 큰 값을 저장하는 변수
   
    for pos in range(0,len(binary)-1):
        if binary[pos] == '1' and binary[pos+1] == '0':
            gap_length += 1
        elif binary[pos] == '0' and binary[pos+1] == '0':
            gap_length += 1
        elif binary[pos] == '0' and binary[pos+1] == '1':
            if gap_length > max_length:
                max_length = gap_length
            gap_length = 0
    return max_length


print solution(101)
