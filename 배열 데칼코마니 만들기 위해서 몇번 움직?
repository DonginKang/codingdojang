#-*- coding: utf-8 -*-

''' 
인풋  : abc   -- > abb --> aba   아웃풋 : 2  
abba : 이거는 그냥 거꿀로해도 똑같으니 0 
abdf : 이거는 abdf --> abde --> 이런식으로 몇번 거쳐야 하느냐 


['abc','abba','abdf'] 이런식으로 input이 들어옴 


1) 홀수 일경우랑 짝수일 경우 나눈다
2) 중간값을 기준으로 왼족은 + 오른쪽은 - 부호로 알파벳을 숫자로 만든다 
3) 왼쪽과 오른쪽 다 더하면 된다 (짝수일경우 홀수일경우 봐라)

'''



def solution(text):

	alpha_order = 'abcdefghijklmnopqrstuvwxyz'
	dic = {}


	for i,alpha in enumerate(alpha_order):
		dic[alpha] = i

	convert_output = []
	elements_len = len(text)

	if elements_len%2 != 0:   # 인풋이 홀수일 경우 

		mid = elements_len/2

		for i in range(0,mid):
			convert_output.append(dic.get(text[i]))

		for i in range(mid+1,elements_len):
			convert_output.append(-(dic.get(text[i])))		

		return abs(sum(convert_output))


	else: 

		mid = elements_len/2

		for i in range(0,mid):
			convert_output.append(dic.get(text[i]))

		for i in range(mid,elements_len):
			convert_output.append(-(dic.get(text[i])))		

		return abs(sum(convert_output))




print solution("abc")
print solution("abcd")
